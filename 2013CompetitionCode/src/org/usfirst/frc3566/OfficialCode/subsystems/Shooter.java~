// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package org.usfirst.frc3566.OfficialCode.subsystems;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import org.usfirst.frc3566.OfficialCode.RobotMap;
import org.usfirst.frc3566.OfficialCode.commands.*;
/**
 *
 */
public class Shooter extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController shooterMotor = RobotMap.shooterShooterMotor;
    SpeedController topDeckMotor = RobotMap.shooterTopDeckMotor;
    SpeedController hock = RobotMap.shooterHock;
    DigitalInput hockOpen = RobotMap.shooterHockOpen;
    DigitalInput hockClose = RobotMap.shooterHockClose;
    SpeedController screwDrive = RobotMap.shooterScrewDrive;
    DigitalInput frisbeeLoaded = RobotMap.shooterFrisbeeLoaded;
    Gyro shooterAngle = RobotMap.shooterShooterAngle;
    DigitalInput frisbeeisin = RobotMap.shooterfrisbeeisin;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new ShooterUperStop());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    public void stopHock(){
        hock.set(0);
    }
    public void shoot(double s){
        shooterMotor.set(s);
    }
    public void stopshoot(){
        shooterMotor.set(0.1);
    }
    public void sendfrisbee(){
        topDeckMotor.set(1);
    }
    public void stopsendfrisbee(){
        topDeckMotor.set(0);
    }
    public boolean isIN(){
        return frisbeeisin.get();
    }
    public void closehock(){
        hock.set(0.6);
    }
    public void openhock(){
        hock.set(-1);
    }
    public boolean isClosed(){
        return hockClose.get();
    }
    public boolean isOpened(){
        return hockOpen.get();
    }
    public boolean isnotloaded(){
        return frisbeeLoaded.get();
    }
    public void screwup(double s){
        screwDrive.set(s);
    }
    public void screwdown(double s){
        screwDrive.set(-s);
    }
    public void screwstop(){
        screwDrive.set(0);
    }
    public double getshooterang(){
        System.out.println("Hi angle is "  + shooterAngle.getAngle());
        return shooterAngle.getAngle();
    }
}
