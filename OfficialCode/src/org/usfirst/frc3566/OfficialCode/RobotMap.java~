// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc3566.OfficialCode;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;
/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainLeftFront;
    public static SpeedController driveTrainLeftRear;
    public static SpeedController driveTrainRightFront;
    public static SpeedController driveTrainRightRear;
    public static RobotDrive driveTrainMechanum;
    public static Encoder driveTrainLeftFrontEncoder;
    public static Encoder driveTrainLeftRearEncoder;
    public static Encoder driveTrainQuadratureEncoder2;
    public static Ultrasonic sensorsUltrasonic;
    public static SpeedController el_ToroLeft_Toro;
    public static SpeedController el_ToroRight_Toro;
    public static SpeedController el_ToroMid_Toro;
    public static DigitalInput el_ToroToro_Upper_Limit;
    public static DigitalInput el_ToroToro_Lower_Limit;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainLeftFront = new Talon(1, 1);
	LiveWindow.addActuator("DriveTrain", "LeftFront", (Talon) driveTrainLeftFront);
        
        driveTrainLeftRear = new Talon(1, 2);
	LiveWindow.addActuator("DriveTrain", "LeftRear", (Talon) driveTrainLeftRear);
        
        driveTrainRightFront = new Talon(1, 3);
	LiveWindow.addActuator("DriveTrain", "RightFront", (Talon) driveTrainRightFront);
        
        driveTrainRightRear = new Talon(1, 4);
	LiveWindow.addActuator("DriveTrain", "RightRear", (Talon) driveTrainRightRear);
        
        driveTrainMechanum = new RobotDrive(driveTrainLeftFront, driveTrainLeftRear,
              driveTrainRightFront, driveTrainRightRear);
	
        driveTrainMechanum.setSafetyEnabled(true);
        driveTrainMechanum.setExpiration(0.1);
        driveTrainMechanum.setSensitivity(0.5);
        driveTrainMechanum.setMaxOutput(1.0);
        driveTrainLeftFrontEncoder = new Encoder(1, 7, 1, 8, false, EncodingType.k4X);
	LiveWindow.addSensor("DriveTrain", "LeftFrontEncoder", driveTrainLeftFrontEncoder);
        driveTrainLeftFrontEncoder.setDistancePerPulse(1.0);
        driveTrainLeftFrontEncoder.setPIDSourceParameter(PIDSourceParameter.kRate);
        driveTrainLeftFrontEncoder.start();
        driveTrainLeftRearEncoder = new Encoder(1, 9, 1, 10, false, EncodingType.k4X);
	LiveWindow.addSensor("DriveTrain", "LeftRearEncoder", driveTrainLeftRearEncoder);
        driveTrainLeftRearEncoder.setDistancePerPulse(1.0);
        driveTrainLeftRearEncoder.setPIDSourceParameter(PIDSourceParameter.kRate);
        driveTrainLeftRearEncoder.start();
        driveTrainQuadratureEncoder2 = new Encoder(1, 11, 1, 12, false, EncodingType.k4X);
	LiveWindow.addSensor("DriveTrain", "Quadrature Encoder 2", driveTrainQuadratureEncoder2);
        driveTrainQuadratureEncoder2.setDistancePerPulse(1.0);
        driveTrainQuadratureEncoder2.setPIDSourceParameter(PIDSourceParameter.kRate);
        driveTrainQuadratureEncoder2.start();
        sensorsUltrasonic = new Ultrasonic(1, 1, 1, 2);
	LiveWindow.addSensor("Sensors", "Ultrasonic", sensorsUltrasonic);
        
        el_ToroLeft_Toro = new Talon(1, 5);
	LiveWindow.addActuator("El_Toro", "Left_Toro", (Talon) el_ToroLeft_Toro);
        
        el_ToroRight_Toro = new Talon(1, 6);
	LiveWindow.addActuator("El_Toro", "Right_Toro", (Talon) el_ToroRight_Toro);
        
        el_ToroMid_Toro = new Talon(1, 7);
	LiveWindow.addActuator("El_Toro", "Mid_Toro", (Talon) el_ToroMid_Toro);
        
        el_ToroToro_Upper_Limit = new DigitalInput(1, 3);
	LiveWindow.addSensor("El_Toro", "Toro_Upper_Limit", el_ToroToro_Upper_Limit);
        
        el_ToroToro_Lower_Limit = new DigitalInput(1, 4);
	LiveWindow.addSensor("El_Toro", "Toro_Lower_Limit", el_ToroToro_Lower_Limit);
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
